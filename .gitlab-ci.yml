include:
  - https://gitlab.com/jitesoft/gitlab-ci-lib/raw/master/container_scan-v2.yml

stages:
  - base
  - extra
  - scan

variables:
  DOCKER_VERSION: 19.03.2
  CE_VERSION: 18.06.3-ce
  ARCHITECTURES: "linux/amd64,linux/arm64,linux/arm/v7"
  CE_ARCHITECTURES: "linux/amd64,linux/arm64,linux/arm/v7,linux/ppc64le,linux/s390x"

image: registry.gitlab.com/jitesoft/dockerfiles/docker/buildx:latest

build:docker:
  stage: base
  script:
    - docker buildx build --platform ${ARCHITECTURES} \
      --progress plain \
      --build-arg DOCKER_VERSION=${DOCKER_VERSION} \
      --push -t ${CI_REGISTRY_IMAGE}:${DOCKER_VERSION} -t ${CI_REGISTRY_IMAGE}:latest  -t jitesoft/docker:latest -t jitesoft/docker:${DOCKER_VERSION} .
  tags: [ jitesoft, buildx, amd64, arm7, arm64 ]
  only:
    refs:
      - master

build:docker:ce:
  stage: base
  script:
    - docker buildx build --platform ${CE_ARCHITECTURES} \
      --progress plain \
      --build-arg DOCKER_VERSION=${CE_VERSION} \
      --push -t ${CI_REGISTRY_IMAGE}:${CE_VERSION} -t ${CI_REGISTRY_IMAGE}:ce  -t jitesoft/docker:ce -t jitesoft/docker:${DOCKER_VERSION} .
  tags: [ jitesoft, buildx, amd64, arm7, arm64, ppc64le, s390x ]
  only:
    refs:
      - master

build:dind:
  needs:
    - build:docker
  stage: extra
  script:
    - cd Dind
    - docker buildx build --platform ${ARCHITECTURES} \
      --progress plain \
      --build-arg DOCKER_VERSION=${DOCKER_VERSION} \
      --push -t ${CI_REGISTRY_IMAGE}/dind:${DOCKER_VERSION} -t ${CI_REGISTRY_IMAGE}/dind:latest -t jitesoft/docker:latest-dind -t jitesoft/docker:${DOCKER_VERSION}-dind .
  tags: [ jitesoft, buildx, amd64, arm64 ]
  only:
    refs:
      - master

build:dind:ce:
  needs:
    - build:docker:ce
  stage: extra
  script:
    - cd Dind
    - docker buildx build --platform linux/amd64,linux/arm64,linux/ppc64le,linux/s390x \
      --progress plain \
      --build-arg DOCKER_VERSION=${CE_VERSION} \
      --push -t ${CI_REGISTRY_IMAGE}/dind:${CE_VERSION} -t ${CI_REGISTRY_IMAGE}/dind:ce jitesoft/docker:${CE_VERSION}-dind jitesoft/docker:ce-dind .
  tags: [ jitesoft, buildx, amd64, arm64, ppc64le, s390x ]
  only:
    refs:
      - master

build:buildx:
  needs:
    - build:docker
  stage: extra
  before_script:
    - apk add --no-cache wget grep
    - BUILDX_VERSION=$(wget -qO- https://github.com/docker/buildx/releases | grep -oP '(?<=releases\/tag\/)(.*?)(?=\">)' | awk 'NR==1{print $1}' | sed -r 's/v//g')
  script:
    - cd BuildX
    - docker buildx build --platform ${ARCHITECTURES} \
      --progress plain \
      --build-arg BUILDX_VERSION=${BUILDX_VERSION} \
      --build-arg DOCKER_VERSION=${DOCKER_VERSION} \
      --push -t ${CI_REGISTRY_IMAGE}/buildx:${DOCKER_VERSION} -t ${CI_REGISTRY_IMAGE}/buildx:latest -t jitesoft/docker:${DOCKER_VERSION}-buildx jitesoft/docker:latest-buildx .
  tags: [ jitesoft, buildx, amd64, arm7, arm64 ]
  only:
    refs:
      - master

scan:
  needs:
    - build:docker
  extends: .container_scanning
  variables:
    SCANNING_IMAGE_NAME: "${CI_REGISTRY_IMAGE}:latest"
    GIT_STRATEGY: none

scan:dind:
  needs:
    - build:dind
  extends: .container_scanning
  variables:
    SCANNING_IMAGE_NAME: "${CI_REGISTRY_IMAGE}/dind:latest"
    GIT_STRATEGY: none

scan:ce:
  needs:
    - build:docker
  extends: .container_scanning
  variables:
    SCANNING_IMAGE_NAME: "${CI_REGISTRY_IMAGE}:ce"
    GIT_STRATEGY: none

scan:dind:ce:
  needs:
    - build:dind:ce
  extends: .container_scanning
  variables:
    SCANNING_IMAGE_NAME: "${CI_REGISTRY_IMAGE}/dind:ce"
    GIT_STRATEGY: none

scan:buildx:
  needs:
    - build:buildx
  extends: .container_scanning
  variables:
    SCANNING_IMAGE_NAME: "${CI_REGISTRY_IMAGE}/buildx:latest"
    GIT_STRATEGY: none
